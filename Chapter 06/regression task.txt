```csharp
 using System;
 using System.Linq;
 using Microsoft.ML;
 using Microsoft.ML.Data;
 namespace RegressionMetricsExample
 {
 class Program
 {
 static void Main(string[] args)
 {
 // Create a new MLContext
 var context = new MLContext();
 // Load the data into an IDataView
 var data =  
context.Data.LoadFromTextFile<HousingData>("path_to_data_file.csv", 
separatorChar: ',');
 // Split the data into training and testing sets
 var (trainData, testData) = context.Data.
 TrainTestSplit(data, testFraction: 0.2);
 // Define the data preprocessing pipeline
  var pipeline = context.Transforms.Concatenate("Features", 
"Feature1", "Feature2", "Feature3", "Feature4")
                .Append(context.Transforms.NormalizeMinMax("Features"))
                .Append(context.Transforms.Conversion.
 MapValueToKey("Label"))
                .Append(context.Transforms.Conversion.
 MapKeyToValue("PredictedLabel"));
// Train the model
         var model = pipeline.Fit(trainData);
 
         // Make predictions on the test set
         var predictions = model.Transform(testData);
 
         // Evaluate the model
         var metrics = context.Regression.Evaluate(predictions);
 
         // Retrieve the evaluation metrics
         var mse = metrics.MeanSquaredError;
         var mae = metrics.MeanAbsoluteError;
         var rmse = Math.Sqrt(mse);
         var r2 = metrics.RSquared;
 
         // Print the evaluation metrics
         Console.WriteLine($"Mean Squared Error (MSE): {mse}");
         Console.WriteLine($"Mean Absolute Error (MAE): {mae}");
         Console.WriteLine($"Root Mean Squared Error (RMSE): 
{rmse}");
         Console.WriteLine($"R2 Score: {r2}");
     }
 }
 
 // Define the data class
 class HousingData
 {
     [LoadColumn(0)]
     public float Feature1;
 
     [LoadColumn(1)]
     public float Feature2;
 
     [LoadColumn(2)]
     public float Feature3;
 
     [LoadColumn(3)]
     public float Feature4;
 [LoadColumn(4)]
 public float Label;
 }
 }
 ```