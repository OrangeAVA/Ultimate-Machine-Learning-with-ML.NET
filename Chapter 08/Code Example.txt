 HousingData[] housingData = new HousingData[]
 {
    new HousingData
    {
        Size = 600f,
        HistoricalPrices = new float[] { 100000f, 125000f, 122000f },
        CurrentPrice = 170000f
    },
    new HousingData
    {
        Size = 1000f,
 HistoricalPrices = new float[] { 200000f, 250000f, 230000f },
        CurrentPrice = 225000f
    },
    new HousingData
    {
        Size = 1000f,
        HistoricalPrices = new float[] { 126000f, 130000f, 200000f },
        CurrentPrice = 195000f
    }
 };
 // Create MLContext
 MLContext mlContext = new MLContext();
 // Load Data
 IDataView data = mlContext.Data.LoadFromEnumerable<HousingData> 
(housingData);
 // Define data preparation estimator
 EstimatorChain<RegressionPredictionTransformer<LinearRegressionModel 
Parameters>> pipelineEstimator =
    mlContext.Transforms.Concatenate("Features", new string[] { "Size", 
"HistoricalPrices" })
        .Append(mlContext.Transforms.NormalizeMinMax("Features"))
        .Append(mlContext.Regression.Trainers.Sdca());
 // Train model
 ITransformer trainedModel = pipelineEstimator.Fit(data);
 // Save model
 mlContext.Model.Save(trainedModel, data.Schema, "model.zip");